<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-21T19:22:02 IST" name="Suite" finished-at="2023-12-21T19:30:35 IST" duration-ms="512223">
    <groups>
    </groups>
    <test started-at="2023-12-21T19:22:02 IST" name="Test" finished-at="2023-12-21T19:30:35 IST" duration-ms="512223">
      <class name="com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan">
        <test-method is-config="true" signature="configureAppium()[pri:0, instance:com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan@604c7e9b]" started-at="2023-12-21T19:22:02 IST" name="configureAppium" finished-at="2023-12-21T19:22:11 IST" duration-ms="8089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureAppium -->
        <test-method signature="verifySignupNewUser()[pri:1, instance:com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan@604c7e9b]" started-at="2023-12-21T19:22:11 IST" name="verifySignupNewUser" finished-at="2023-12-21T19:23:20 IST" duration-ms="69173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignupNewUser -->
        <test-method signature="verifyCreatePracticeInfo()[pri:2, instance:com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan@604c7e9b]" started-at="2023-12-21T19:23:20 IST" name="verifyCreatePracticeInfo" finished-at="2023-12-21T19:24:03 IST" depends-on-methods="com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan.verifySignupNewUser" duration-ms="43354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreatePracticeInfo -->
        <test-method signature="verifySikkaWebViewRegistration()[pri:3, instance:com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan@604c7e9b]" started-at="2023-12-21T19:24:03 IST" name="verifySikkaWebViewRegistration" finished-at="2023-12-21T19:27:11 IST" depends-on-methods="com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan.verifyCreatePracticeInfo" duration-ms="188230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySikkaWebViewRegistration -->
        <test-method signature="verifySpuInstallPopupAndRefreshData()[pri:4, instance:com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan@604c7e9b]" started-at="2023-12-21T19:27:11 IST" name="verifySpuInstallPopupAndRefreshData" finished-at="2023-12-21T19:27:23 IST" depends-on-methods="com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan.verifySikkaWebViewRegistration" duration-ms="11927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySpuInstallPopupAndRefreshData -->
        <test-method signature="verifyEulaAgreementPageAndAcceptAgreement()[pri:5, instance:com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan@604c7e9b]" started-at="2023-12-21T19:27:23 IST" name="verifyEulaAgreementPageAndAcceptAgreement" finished-at="2023-12-21T19:27:56 IST" depends-on-methods="com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan.verifySpuInstallPopupAndRefreshData" duration-ms="32668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEulaAgreementPageAndAcceptAgreement -->
        <test-method signature="verifyCanUserBuyPaidPlan()[pri:6, instance:com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan@604c7e9b]" started-at="2023-12-21T19:27:56 IST" name="verifyCanUserBuyPaidPlan" finished-at="2023-12-21T19:28:49 IST" depends-on-methods="com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan.verifyEulaAgreementPageAndAcceptAgreement" duration-ms="53195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCanUserBuyPaidPlan -->
        <test-method signature="verifyCancelSubscriptionPopup()[pri:7, instance:com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan@604c7e9b]" started-at="2023-12-21T19:28:49 IST" name="verifyCancelSubscriptionPopup" finished-at="2023-12-21T19:29:00 IST" depends-on-methods="com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan.verifyCanUserBuyPaidPlan" duration-ms="10728" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelSubscriptionPopup -->
        <test-method signature="verifyCanUserCancelSubcription()[pri:8, instance:com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan@604c7e9b]" started-at="2023-12-21T19:29:00 IST" name="verifyCanUserCancelSubcription" finished-at="2023-12-21T19:29:12 IST" depends-on-methods="com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan.verifyCancelSubscriptionPopup" duration-ms="12443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCanUserCancelSubcription -->
        <test-method signature="verifyCanUserUpdatePaymentMethod()[pri:9, instance:com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan@604c7e9b]" started-at="2023-12-21T19:29:12 IST" name="verifyCanUserUpdatePaymentMethod" finished-at="2023-12-21T19:30:34 IST" depends-on-methods="com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan.verifyCanUserCancelSubcription" duration-ms="82154" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at com.dentscribe.pages.ios.ManageSubscriptionPage.validateManageSubscriptionPage(ManageSubscriptionPage.java:41)
at com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan.verifyCanUserUpdatePaymentMethod(TestCreateUserBuyPaidPlanAndCancelPaidPlan.java:195)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCanUserUpdatePaymentMethod -->
        <test-method signature="verifyCanUserBuyPaidPlanAgainAfterCancelOnce()[pri:10, instance:com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan@604c7e9b]" started-at="2023-12-21T19:30:35 IST" name="verifyCanUserBuyPaidPlanAgainAfterCancelOnce" finished-at="2023-12-21T19:30:35 IST" depends-on-methods="com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan.verifyCanUserUpdatePaymentMethod" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCreateUserBuyPaidPlanAndCancelPaidPlan.verifyCanUserBuyPaidPlanAgainAfterCancelOnce()[pri:10, instance:com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan@604c7e9b] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCreateUserBuyPaidPlanAndCancelPaidPlan.verifyCanUserBuyPaidPlanAgainAfterCancelOnce()[pri:10, instance:com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan@604c7e9b] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCanUserBuyPaidPlanAgainAfterCancelOnce -->
      </class> <!-- com.dentscribe.testCases_iOS.TestCreateUserBuyPaidPlanAndCancelPaidPlan -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
